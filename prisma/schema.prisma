// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
}

generator kysely {
  provider = "prisma-kysely"
  output = "../kysely/db"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id BigInt @id @default(autoincrement())

  username String  @unique
  email    String  @unique
  password String?

  notes   Note[]
  folders Folder[]
  shares  Share[]
  socials OAuth[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OAuth {
  id String @id

  type SocialAuth

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId BigInt

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Note {
  id BigInt @id @default(autoincrement())

  name    String
  content String?
  path    String  @unique

  owner   User   @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId BigInt

  parent   Folder @relation(fields: [parentId], references: [id], onDelete: Cascade)
  parentId BigInt

  shares Share[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // add storing (include, covering) when this is merged https://github.com/prisma/prisma/issues/8584

  // Cockroach tells me to remove this indexes and add another ones with STORING
  // for example: 
  // CREATE INDEX ON ***."Note" ("parentId") STORING (name, path); 
  // DROP INDEX ***."Note"@"Note_parentId_idx";
  @@index(parentId)
  @@index([path, ownerId])
}

model Folder {
  id BigInt @id @default(autoincrement())

  name String
  path String  @unique
  root Boolean @default(false)

  notes      Note[]
  subfolders Folder[] @relation(name: "subfolders")

  parent   Folder? @relation(name: "subfolders", fields: [parentId], references: [id], onDelete: Cascade)
  parentId BigInt?

  owner   User   @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId BigInt

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Same appies here, it just does not like indexes without STORING
  // @@index(parentId)
  // @@index([path, ownerId])
}

model Share {
  id BigInt @id @default(autoincrement())

  link String @unique

  // NOTE: later can share folder ? but share entity still should own only note or folder 
  note   Note   @relation(references: [id], fields: [noteId], onDelete: Cascade, onUpdate: Cascade)
  noteId BigInt

  owner   User   @relation(references: [id], fields: [ownerId], onDelete: Cascade, onUpdate: Cascade)
  ownerId BigInt

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum SocialAuth {
  Google
  GitHub
}
